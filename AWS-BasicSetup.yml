# CloudFormation Code
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Template by Rounak Jain
Parameters:
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/canonical/ubuntu/server/20.04/stable/current/amd64/hvm/ebs-gp2/ami-id'
    # Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

  EC2InstanceTermination:
    Default: false
    Type: String
    AllowedValues: [false, true]

  KeyName:
    Type: String

  S3UserName:
    Default: 's3access'
    Type: String

  S3PrivateBucketName:
    Type: String

  S3PublicBucketName:
    Type: String

  VersioningConfiguration:
    Default: Enabled
    Type: String
    AllowedValues: [Enabled, Suspended]

  TagValue:
    Default: 'TagValue'
    Type: String

  InstanceType:
    Description: The database instance type
    Type: 'String'
    Default: 't3.medium' #Change to t3.medium
    AllowedValues: [t2.nano, t2.micro, t2.small, t2.medium, t2.large, t3.nano,
      t3.micro, t3.small, t3.medium, t3.large]
    ConstraintDescription: must select a valid database instance type.  

  DBClusterIdentifier:
    Default: ClusterName
    Description: Cluster Name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBInstanceIdentifier:
    Default: DBInstanceIdentifier
    Description: DB Instance Name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBName:
    Default: MyDatabase
    Description: The database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBUser:
    Default: 'admin'
    # NoEcho: 'true'
    Description: The database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBPassword:
    NoEcho: 'true'
    Description: The database admin account password
    Type: String
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]+'
    ConstraintDescription: must contain only alphanumeric characters.
  DBAllocatedStorage:
    Default: '30'
    Description: The size of the database (Gb)
    Type: Number
    MinValue: '5'
    MaxValue: '1024'
    ConstraintDescription: must be between 5 and 1024Gb.
  DBEngine:
    Type: String 
    Default: 'aurora-mysql'
    Description: The size of the database (Gb)
    AllowedValues: [mysql, aurora, aurora-mysql, aurora-postgresql, mariadb, oracle-ee, oracle-se2, 
      oracle-se1, oracle-se, postgres, sqlserver-ee, sqlserver-se, sqlserver-ex, sqlserver-web]
    ConstraintDescription: must select a valid database engine.      
  DBInstanceClass:
    Description: The database instance type
    Type: String
    Default: db.t3.medium
    AllowedValues: [db.t1.micro, db.m1.small, db.m1.medium, db.m1.large, db.m1.xlarge,
      db.m2.xlarge, db.m2.2xlarge, db.m2.4xlarge, db.m3.medium, db.m3.large, db.m3.xlarge,
      db.m3.2xlarge, db.m4.large, db.m4.xlarge, db.m4.2xlarge, db.m4.4xlarge, db.m4.10xlarge,
      db.r3.large, db.r3.xlarge, db.r3.2xlarge, db.r3.4xlarge, db.r3.8xlarge, db.m2.xlarge,
      db.m2.2xlarge, db.m2.4xlarge, db.cr1.8xlarge, db.t2.micro, db.t2.small, db.t2.medium,
      db.t2.large, db.t3.small, db.t3.medium]
    ConstraintDescription: must select a valid database instance type.
  DBPort:
    Default: '3306'
    Description: Port For DB
    Type: Number
    ConstraintDescription: must be between 0 and 65535.
  DBBackupRetentionPeriod:
    Default: '7'
    Description: Backup Retention Period 
    Type: Number
    ConstraintDescription: Choose between 1 To 35 Days
  DBMultiAZ:
    Description: Multi-AZ master database
    Type: String
    Default: 'false'
    AllowedValues: ['true', 'false']
    ConstraintDescription: must be true or false.
  DBSnapshotIdentifier:
    Default: snapshotidentifier
    Description: SnapShot Identifier Name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.

  ElasticacheClusterEngine:
    Type: String 
    Default: 'redis'
    Description: Elasticache Cluster Engine Name
    AllowedValues: [memcached, redis]
    ConstraintDescription: must select a valid database engine.
  ElasticacheClusterEngineVersion:
    Type: String 
    Default: '5.0.6'
    Description: Elasticache Cluster Engine Version
    AllowedValues:  [6.x, 5.0.6, 4.0.10, 3.2.10, 3.2.6]
    ConstraintDescription: must select a valid Elasticache Cluster Engine Version
  ElasticacheNodeType:
    Type: String 
    Default: 'cache.t3.medium'
    Description: Elasticache Node Type
    AllowedValues: [cache.t1.micro, cache.t3.micro, cache.t3.small, cache.t3.medium,
      cache.t2.micro, cache.t2.small, cache.t2.medium, cache.m4.large, cache.m4.xlarge, 
      cache.m4.2xlarge, cache.m4.4xlarge, cache.m4.10xlarge, cache.m6g.large, cache.m6g.xlarge, 
      cache.m6g.2xlarge, cache.m6g.4xlarge, cache.m6g.12xlarge, cache.m6g.24xlarge]
    ConstraintDescription: must select a valid Elasticache Node type.
  CacheClusterName:
    Default: cacheclustername
    Description: Cache Cluster Name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  NumCacheNodes:
    Default: '1'
    Description: Number of Cache Node 
    Type: Number
    ConstraintDescription: Choose correct number  
  CacheClusterAZMode:
    Type: String 
    Default: 'single-az'
    Description: Elasticache Cluster AZ Mode
    AllowedValues: [single-az, cross-az]
    ConstraintDescription: must select a valid AZ mode.
  CacheClusterPort:
    Default: '6379'
    Description: Port For Cache Cluster
    Type: Number
    ConstraintDescription: must be between 0 and 65535.  

  SecretsName:
    Default: SecretsName
    Description: Secrets Name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.

Resources: 
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Application-SG
      GroupDescription: Application Security Group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0

      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0

      Tags:
        - Key: Name
          Value: Application-SG

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Database-SG
      GroupDescription: Database Security Group
      Tags:
        - Key: Name
          Value: Database-SG

  DBSecurityGroupRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !GetAtt 'DBSecurityGroup.GroupId'
      IpProtocol: tcp
      FromPort: 3306
      ToPort: 3306
      SourceSecurityGroupId: !GetAtt 'InstanceSecurityGroup.GroupId'
      Tags:
        - Key: Name
          Value: !Ref TagValue

  CacheSecurityGroupRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !GetAtt 'DBSecurityGroup.GroupId'
      IpProtocol: tcp
      FromPort: 6379
      ToPort: 6379
      SourceSecurityGroupId: !GetAtt 'InstanceSecurityGroup.GroupId'
      Tags:
        - Key: Name
          Value: !Ref TagValue


  InstanceSecurityGroupRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !GetAtt 'InstanceSecurityGroup.GroupId'
      IpProtocol: tcp
      FromPort: 3306
      ToPort: 3306
      SourceSecurityGroupId: !GetAtt 'DBSecurityGroup.GroupId'
      Tags:
        - Key: Name
          Value: !Ref TagValue

  ApplicationEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName
      DisableApiTermination: !Ref EC2InstanceTermination
      ImageId: !Ref LatestAmiId
      # InstanceType: !Ref 'InstanceType'
      InstanceType: t3.medium
      Monitoring: 'true'
      SecurityGroupIds:
        - !GetAtt 'InstanceSecurityGroup.GroupId'
      UserData: !Base64 |
        #!/bin/bash -ex
        sudo apt update -y 
        sudo apt install -y nginx
      Tags:
        - Key: Name
          Value: !Sub
            - Application-${TagValue}
            - { TagValue: !Ref TagValue}

  AppServerIPAddress:
    Type: AWS::EC2::EIP
  AppIPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref 'ApplicationEC2Instance'
      EIP: !Ref 'AppServerIPAddress'


  SocketEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName
      DisableApiTermination: !Ref EC2InstanceTermination
      ImageId: !Ref LatestAmiId
      # InstanceType: !Ref 'InstanceType'
      InstanceType: t3.medium
      Monitoring: 'true'
      SecurityGroupIds:
        - !GetAtt 'InstanceSecurityGroup.GroupId'
      UserData: !Base64 |
        #!/bin/bash -ex
        sudo apt update -y 
        sudo apt install -y nginx
      Tags:
        - Key: Name
          Value: !Sub
            - Socket-${TagValue}
            - { TagValue: !Ref TagValue}


  SocketServerIPAddress:
    Type: AWS::EC2::EIP
  SocketIPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref 'SocketEC2Instance'
      EIP: !Ref 'SocketServerIPAddress'


  S3BucketPrivate:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: Private
      BucketName: !Ref S3PrivateBucketName
      VersioningConfiguration:
        Status: !Ref VersioningConfiguration
      BucketEncryption: 
        ServerSideEncryptionConfiguration: 
        - ServerSideEncryptionByDefault:
            # SSEAlgorithm: 'aws:s3'
            SSEAlgorithm: 'aws:kms'
            KMSMasterKeyID: KMS-KEY-ARN
      Tags:
        - Key: Name
          Value: !Ref S3PrivateBucketName
        - Key: Type
          Value: Private

  S3BucketPublic:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: PublicRead
      BucketName: !Ref S3PublicBucketName
      VersioningConfiguration: 
         Status: !Ref VersioningConfiguration
      BucketEncryption: 
        ServerSideEncryptionConfiguration: 
        - ServerSideEncryptionByDefault:
            # SSEAlgorithm: 'aws:s3'
            SSEAlgorithm: 'aws:kms'
            KMSMasterKeyID: KMS-KEY-ARN
      Tags:
        - Key: Name
          Value: !Ref S3PublicBucketName
        - Key: Type
          Value: Public

  S3IAMUser:
    Type: AWS::IAM::User
    Properties:
      Path: /
      Policies:
        - PolicyName: 'S3Limited-Access'
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - s3:PutObject
                  - s3:GetObject
                  - s3:DeleteObject
                Resource: [
                  !Sub '${S3BucketPrivate.Arn}/*',
                  !Sub '${S3BucketPublic.Arn}/*'
                  ]
      UserName: !Ref S3UserName
      Tags:
        - Key: Name
          Value: !Ref TagValue
  
  S3AccessKey:
    Type: AWS::IAM::AccessKey
    Properties: 
      Status: Active
      UserName:
        !Ref S3IAMUser

  # S3AccessKeySecret:
  #   Type: AWS::SecretsManager::Secret
  #   Properties:
  #     Name: !Ref SecretsName
  #     Description: Prod Secrets
  #     SecretString: !Sub '{"AWS_KEY":"${S3AccessKey}","AWS_SECRET":"${S3AccessKey.SecretAccessKey}"}'

  AuroraDBCluster:
      Type: AWS::RDS::DBCluster
      DeletionPolicy: Snapshot
      UpdateReplacePolicy: Snapshot
      Properties:
        Engine: !Ref 'DBEngine'
        DatabaseName: !Ref 'DBName'
        DBClusterIdentifier: !Ref 'DBClusterIdentifier'
        Port: !Ref DBPort
        MasterUsername: !Ref 'DBUser'
        MasterUserPassword: !Ref 'DBPassword'
        # DBSubnetGroupName: !Ref DBSubnetGroup
        VpcSecurityGroupIds: 
        - !GetAtt 'DBSecurityGroup.GroupId'
        BackupRetentionPeriod: !Ref DBBackupRetentionPeriod
        # DBClusterParameterGroupName: !Ref RDSDBClusterParameterGroup
        StorageEncrypted:  true
        EnableCloudwatchLogsExports: 
          - audit
          - error
          - general
          - slowquery

        Tags:
          -
            Key: Name
            Value: !Ref TagValue


  AuroraDBFirstInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      CopyTagsToSnapshot: true  
      DBInstanceClass: !Ref 'DBInstanceClass'
      DBClusterIdentifier: !Ref AuroraDBCluster
      DBInstanceIdentifier: !Ref 'DBInstanceIdentifier'
      Engine: !Ref 'DBEngine'
      # EngineVersion: !Ref DBEngineVersion
      # DBParameterGroupName:
      #   Ref: DBParamGroup
      # MonitoringInterval: !If [IsProd, 1, 0]
      # MonitoringRoleArn: !If [IsProd, !GetAtt MonitoringIAMRole.Arn, !Ref "AWS::NoValue"]
      AutoMinorVersionUpgrade: true
      # DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: false
      # EnablePerformanceInsights: true
      # PerformanceInsightsKMSKeyId: !Ref AuroraKMSCMK
      # PerformanceInsightsRetentionPeriod: !If [IsProd, 731, 7]
      Tags:
        -
          Key: Name
          Value: !Ref TagValue



  ElasticacheCluster:
    Type: 'AWS::ElastiCache::CacheCluster'
    Properties:
      AZMode: !Ref CacheClusterAZMode
      AutoMinorVersionUpgrade: false
      ClusterName: !Ref CacheClusterName
      Engine: !Ref ElasticacheClusterEngine
      EngineVersion: !Ref ElasticacheClusterEngineVersion
      Port: !Ref CacheClusterPort
      CacheNodeType: !Ref ElasticacheNodeType
      NumCacheNodes: '1'
      SnapshotRetentionLimit: '1'
      VpcSecurityGroupIds:
        - !GetAtt 
          - DBSecurityGroup
          - GroupId

  Secrets:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Ref SecretsName
      Description: Prod Secrets
      SecretString: 
          !Sub '{"AWS_KEY":"${S3AccessKey}","AWS_SECRET":"${S3AccessKey.SecretAccessKey}",
          "AWS_PUBLIC_BUCKET":"${S3PublicBucketName}","AWS_PRIVATE_BUCKET":"${S3PrivateBucketName}",
          "DB_HOST":"${AuroraDBCluster.Endpoint.Address}","DB_PORT":"${AuroraDBCluster.Endpoint.Port}","DB_USERNAME":"${DBUser}","DB_PASSWORD":"${DBPassword}",
          "DB_DATABASE":"${DBName}","REDIS_HOST":"${ElasticacheCluster.RedisEndpoint.Address}","REDIS_PORT":"${ElasticacheCluster.RedisEndpoint.Port}"}'


Outputs:
  AppInstanceIPAddress:
    Description: IP address of the Application EC2 instance
    Value: !Ref 'AppServerIPAddress'
  SocketInstanceIPAddress:
    Description: IP address of the Socket EC2 instance
    Value: !Ref 'SocketServerIPAddress'


  # S3UserAccessKey:
  #   Value: !Ref S3AccessKey
  #   Description: AWSAccessKeyId of S3 user
  # S3UserSecretKey:
  #   Value: !GetAtt [S3AccessKey,SecretAccessKey]
  #   Description: AWSSecretAccessKey of S3 user


  # DBClusterEndpoint:
  #   Description: 'Aurora Cluster/Writer Endpoint'
  #   Value: !GetAtt 'AuroraDBCluster.Endpoint.Address'
  # DBReaderEndpoint:
  #   Description: 'Aurora Reader Endpoint'
  #   Value: !GetAtt 'AuroraDBCluster.ReadEndpoint.Address'
  # DBPort:
  #   Description: 'Aurora Endpoint Port'
  #   Value: !GetAtt 'AuroraDBCluster.Endpoint.Port'
  # DBUsername:
  #   Description: 'Database master username'
  #   Value: !Ref DBUser
  # DBName:
  #   Description: 'Database Name'
  #   Value: !Ref DBName
   
  # CacheClusterEndpoint:
  #   Description: 'Cache Cluster/Writer Endpoint'
  #   Value: !GetAtt 'ElasticacheCluster.RedisEndpoint.Address'
  # CacheClusterPort:
  #   Description: 'Cache Cluster/Writer Endpoint'
  #   Value: !GetAtt 'ElasticacheCluster.RedisEndpoint.Port'
